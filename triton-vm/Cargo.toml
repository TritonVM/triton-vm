[package]
name = "triton-vm"
description = """
A virtual machine that comes with Algebraic Execution Tables (AET) and Arithmetic Intermediate
Representations (AIR) for use in combination with a STARK proof system to allow proving correct
execution of arbitrary programs in zero-knowledge.
"""
keywords = ["zero-knowledge", "STARK", "virtual-machine", "recursive"]
categories = ["cryptography", "mathematics"]

version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
readme.workspace = true

[dependencies]
arbitrary.workspace = true
colored.workspace = true
criterion.workspace = true
get-size.workspace = true
indexmap.workspace = true
itertools.workspace = true
lazy_static.workspace = true
ndarray.workspace = true
nom.workspace = true
num-traits.workspace = true
proc-macro2.workspace = true
quote.workspace = true
rand.workspace = true
rand_core.workspace = true
rayon.workspace = true
serde.workspace = true
serde_derive.workspace = true
strum.workspace = true
thiserror.workspace = true
twenty-first.workspace = true
unicode-width.workspace = true

[dev-dependencies]
assert2.workspace = true
cargo-husky.workspace = true
fs-err.workspace = true
pretty_assertions.workspace = true
proptest.workspace = true
proptest-arbitrary-interop.workspace = true
serde_json.workspace = true
test-strategy.workspace = true
trybuild.workspace = true

[features]
default = ["no_profile"]
no_profile = [] # see `profiler.rs` for an explanation of this seemingly backwards feature

[lints]
workspace = true

[[bench]]
name = "bezout_coeffs"
harness = false

[[bench]]
name = "cached_vs_jit_trace"
harness = false

[[bench]]
name = "initialize_array"
harness = false

[[bench]]
name = "mem_io"
harness = false

[[bench]]
name = "proof_size"
harness = false

[[bench]]
name = "prove_fib"
harness = false

[[bench]]
name = "prove_halt"
harness = false

[[bench]]
name = "trace_mmr_new_peak_calculation"
harness = false

[[bench]]
name = "verify_halt"
harness = false

[[example]]
name = "factorial"
